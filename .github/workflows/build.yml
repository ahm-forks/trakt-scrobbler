name: Build
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    #----------------------------------------------
    #   check-out repo and set-up python and poetry
    #----------------------------------------------
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python 3
      uses: actions/setup-python@v2
      with:
         python-version: '3.x'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Prepare venv cache
      uses: actions/cache@v3
      id: cache
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install pytest
      if: steps.cache.outputs.cache-hit == 'false'
      run: poetry run pip install pytest
    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install project
      run: poetry install --no-interaction
    - name: Run tests
      run: poetry run pytest -v -ra --color=yes --code-highlight=yes

  build:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
    #----------------------------------------------
    #   check-out repo and set-up python and poetry
    #----------------------------------------------
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python 3
      uses: actions/setup-python@v2
      with:
         python-version: '3.x'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Build
      run: poetry build --ansi --no-interaction
    - uses: actions/upload-artifact@v2
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        name: dist
        path: dist

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    #----------------------------------------------
    #   check-out repo and set-up python and poetry
    #----------------------------------------------
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python 3
      uses: actions/setup-python@v2
      with:
         python-version: '3.x'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Generate Changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3
      with:
        owner: iamkroot
        ignorePreReleases: true
        commitMode: true

    - name: Release(github)
      if: ${{ ! env.ACT }}
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.*
        body: ${{steps.github_release.outputs.changelog}}

    - name: Release(pypi)
      run:  poetry publish --ansi --no-interaction
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
# vim:ft=yaml:ts=2:et:
